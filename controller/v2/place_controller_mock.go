// Code generated by MockGen. DO NOT EDIT.
// Source: controller/v2/place_controller.go

// Package v2 is a generated GoMock package.
package v2

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockPlaceController is a mock of PlaceController interface
type MockPlaceController struct {
	ctrl     *gomock.Controller
	recorder *MockPlaceControllerMockRecorder
}

// MockPlaceControllerMockRecorder is the mock recorder for MockPlaceController
type MockPlaceControllerMockRecorder struct {
	mock *MockPlaceController
}

// NewMockPlaceController creates a new mock instance
func NewMockPlaceController(ctrl *gomock.Controller) *MockPlaceController {
	mock := &MockPlaceController{ctrl: ctrl}
	mock.recorder = &MockPlaceControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPlaceController) EXPECT() *MockPlaceControllerMockRecorder {
	return m.recorder
}

// FindLocations mocks base method
func (m *MockPlaceController) FindLocations(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "FindLocations", w, r)
}

// FindLocations indicates an expected call of FindLocations
func (mr *MockPlaceControllerMockRecorder) FindLocations(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindLocations", reflect.TypeOf((*MockPlaceController)(nil).FindLocations), w, r)
}

// FindRegions mocks base method
func (m *MockPlaceController) FindRegions(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "FindRegions", w, r)
}

// FindRegions indicates an expected call of FindRegions
func (mr *MockPlaceControllerMockRecorder) FindRegions(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindRegions", reflect.TypeOf((*MockPlaceController)(nil).FindRegions), w, r)
}

// SeedLocations mocks base method
func (m *MockPlaceController) SeedLocations(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateLocation", w, r)
}

// SeedLocations indicates an expected call of SeedLocations
func (mr *MockPlaceControllerMockRecorder) SeedLocations(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLocation", reflect.TypeOf((*MockPlaceController)(nil).SeedLocations), w, r)
}

// SeedRegions mocks base method
func (m *MockPlaceController) SeedRegions(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateRegion", w, r)
}

// SeedRegions indicates an expected call of SeedRegions
func (mr *MockPlaceControllerMockRecorder) SeedRegions(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRegion", reflect.TypeOf((*MockPlaceController)(nil).SeedRegions), w, r)
}
